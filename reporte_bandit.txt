Run started:2025-06-23 21:01:56.739060

Test results:
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'clave_super_secreta'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b105_hardcoded_password_string.html
   Location: .\app.py:6:17
5	app = Flask(__name__)
6	app.secret_key = "clave_super_secreta"  # Requerida para usar sesiones
7	

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b605_start_process_with_a_shell.html
   Location: .\app.py:35:8
34	            f.write(f"{usuario}:{password}\n")
35	        os.system("echo " + usuario)
36	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\app.py:58:14
57	    cursor = conn.cursor()
58	    query = f"SELECT * FROM usuarios WHERE id = {id_usuario}"
59	    cursor.execute(query)

--------------------------------------------------
>> Issue: [B201:flask_debug_true] A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.
   Severity: High   Confidence: Medium
   CWE: CWE-94 (https://cwe.mitre.org/data/definitions/94.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b201_flask_debug_true.html
   Location: .\app.py:117:4
116	if __name__ == "__main__":
117	    app.run(debug=True)

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b307-eval
   Location: .\register.py:4:4
3	def registrar_usuario(nombre, clave):
4	    eval(f"print('Usuario {nombre} registrado')")  # Muy vulnerable
5	

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b605_start_process_with_a_shell.html
   Location: .\sqlmap\extra\beep\beep.py:41:4
40	def _cygwin_beep(filename):
41	    os.system("play-sound-file '%s' 2>/dev/null" % filename)
42	

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b605_start_process_with_a_shell.html
   Location: .\sqlmap\extra\beep\beep.py:44:4
43	def _mac_wav_play(filename):
44	    os.system("afplay '%s' 2>/dev/null" % BEEP_WAV_FILENAME)
45	

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b605_start_process_with_a_shell.html
   Location: .\sqlmap\extra\beep\beep.py:53:15
52	    for _ in ("paplay", "aplay", "mpv", "mplayer", "play"):
53	        if not os.system("%s '%s' 2>/dev/null" % (_, filename)):
54	            return

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\extra\icmpsh\icmpsh_m.py:108:20
107	                        cmd = sys.stdin.readline()
108	                    except:
109	                        pass
110	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\extra\shutils\duplicates.py:26:16
25	                        items.append(item)
26	                except:
27	                    pass
28	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\extra\vulnserver\vulnserver.py:156:48
155	                            if "base64" in self.params:
156	                                _cursor.execute("SELECT * FROM users WHERE id=%s LIMIT 0, 1" % base64.b64decode("%s===" % self.params["id"], altchars=self.params.get("altchars")).decode())
157	                            else:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\extra\vulnserver\vulnserver.py:158:48
157	                            else:
158	                                _cursor.execute("SELECT * FROM users WHERE id=%s LIMIT 0, 1" % self.params["id"])
159	                        results = _cursor.fetchall()

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\lib\controller\checks.py:1077:66
1076	            randStr = randomStr()
1077	            payload = "%s%s%s" % (prefix, "%s.%d%s" % (origValue, random.randint(1, 9), randStr), suffix)
1078	            payload = agent.payload(place, parameter, newValue=payload, where=PAYLOAD.WHERE.REPLACE)

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\sqlmap\lib\controller\controller.py:12:0
11	import re
12	import subprocess
13	import time

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\sqlmap\lib\controller\controller.py:624:62
623	                                                try:
624	                                                    process = subprocess.Popen(conf.alert, shell=True)
625	                                                    process.wait()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\lib\core\agent.py:1062:38
1061	                        _ = re.sub(r"SELECT.+?FROM", "SELECT %s AS z,row_number() over() AS y FROM" % part, query, 1)
1062	                        replacement = "SELECT x.z FROM (%s)x WHERE x.y-1=%d" % (_, num)
1063	                        limitedQuery = replacement

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\lib\core\agent.py:1177:25
1176	        if Backend.getIdentifiedDbms() in (DBMS.MCKOI,) and selectFrom:
1177	            lengthExpr = "SELECT %s FROM %s" % (lengthQuery % selectFrom.group(1), selectFrom.group(2))
1178	        elif selectTopExpr or selectMinMaxExpr:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with cPickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\sqlmap\lib\core\bigarray.py:9:4
8	try:
9	    import cPickle as pickle
10	except:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\sqlmap\lib\core\bigarray.py:11:4
10	except:
11	    import pickle
12	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\sqlmap\lib\core\common.py:31:0
30	import string
31	import subprocess
32	import sys

--------------------------------------------------
>> Issue: [B406:blacklist] Using parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parse with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b406-import-xml-sax
   Location: .\sqlmap\lib\core\common.py:43:0
42	from optparse import OptionValueError
43	from xml.sax import parse
44	from xml.sax import SAXParseException

--------------------------------------------------
>> Issue: [B406:blacklist] Using SAXParseException to parse untrusted XML data is known to be vulnerable to XML attacks. Replace SAXParseException with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b406-import-xml-sax
   Location: .\sqlmap\lib\core\common.py:44:0
43	from xml.sax import parse
44	from xml.sax import SAXParseException
45	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\common.py:737:28
736	                                raise
737	                            except Exception:
738	                                pass
739	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\common.py:782:20
781	                            break
782	                    except:
783	                        pass
784	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\common.py:1197:16
1196	                    time.sleep(0.05)  # Reference: http://www.gossamer-threads.com/lists/python/python/781893
1197	                except:
1198	                    pass
1199	                finally:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\common.py:1435:4
1434	            retVal = json.loads(content)
1435	    except:
1436	        pass
1437	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ' '
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b105_hardcoded_password_string.html
   Location: .\sqlmap\lib\core\common.py:1453:44
1452	
1453	    if isNoneValue(password) or password == ' ':
1454	        retVal = NULL

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\common.py:2038:8
2037	            content.decode()
2038	        except:
2039	            pass
2040	        else:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\common.py:2373:8
2372	            curses.endwin()
2373	        except:
2374	            pass
2375	

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\sqlmap\lib\core\common.py:2389:17
2388	    try:
2389	        retVal = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT).communicate()[0] or ""
2390	    except Exception as ex:

--------------------------------------------------
>> Issue: [B317:blacklist] Using xml.sax.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b313-b320-xml-bad-sax
   Location: .\sqlmap\lib\core\common.py:2414:12
2413	        with contextlib.closing(io.StringIO(readCachedFileContent(xmlFile))) as stream:
2414	            parse(stream, handler)
2415	    except (SAXParseException, UnicodeError) as ex:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\common.py:3924:4
3923	        retVal = extractRegexResult(r"VERSION\s*=\s*[\"'](?P<result>[\d.]+)", content)
3924	    except:
3925	        pass
3926	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\lib\core\common.py:3949:11
3948	
3949	    return random.sample(kb.userAgents, 1)[0]
3950	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\core\common.py:3970:10
3969	
3970	    key = hashlib.md5(getBytes(_)).hexdigest()[:8]
3971	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\common.py:4001:8
4000	                return
4001	        except:
4002	            pass
4003	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\common.py:4022:12
4021	                    f.write("%s\n" % key)
4022	            except:
4023	                pass
4024	        else:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\common.py:4186:24
4185	                            raise
4186	                        except:
4187	                            pass
4188	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\lib\core\common.py:4539:20
4538	        parts = retVal.split('.')
4539	        parts[-1] = random.sample(RANDOMIZATION_TLDS, 1)[0]
4540	        retVal = '.'.join(parts)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\common.py:4695:4
4694	                        logger.debug(errMsg)
4695	    except:
4696	        pass
4697	

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b102_exec_used.html
   Location: .\sqlmap\lib\core\common.py:4874:8
4873	    try:
4874	        exec(code, variables)
4875	    except KeyboardInterrupt:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\lib\core\compat.py:219:25
218	    except AttributeError:
219	        retval = "".join(random.sample("0123456789abcdef", 1)[0] for _ in xrange(32))
220	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with cPickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\sqlmap\lib\core\convert.py:9:4
8	try:
9	    import cPickle as pickle
10	except:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\sqlmap\lib\core\convert.py:11:4
10	except:
11	    import pickle
12	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\convert.py:411:8
410	            retVal = str(retVal)
411	        except:
412	            pass
413	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\core\decorators.py:45:22
44	        try:
45	            key = int(hashlib.md5("|".join(str(_) for _ in (f, args, kwargs)).encode(UNICODE_ENCODING)).hexdigest(), 16) & 0x7fffffffffffffff
46	        except ValueError:  # https://github.com/sqlmapproject/sqlmap/issues/4281 (NOTE: non-standard Python behavior where hexdigest returns binary value)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\dump.py:152:12
151	                elements.sort(key=lambda _: _.lower() if hasattr(_, "lower") else _)
152	            except:
153	                pass
154	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\core\dump.py:438:75
437	                    _ = re.sub(r"[^\w]", UNSAFE_DUMP_FILEPATH_REPLACEMENT, unsafeSQLIdentificatorNaming(db))
438	                    dumpDbPath = os.path.join(conf.dumpPath, "%s-%s" % (_, hashlib.md5(getBytes(db)).hexdigest()[:8]))
439	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\core\dump.py:464:81
463	                        _ = re.sub(r"[^\w]", UNSAFE_DUMP_FILEPATH_REPLACEMENT, unsafeSQLIdentificatorNaming(table))
464	                        dumpFileName = os.path.join(dumpDbPath, "%s-%s.%s" % (_, hashlib.md5(getBytes(table)).hexdigest()[:8], conf.dumpFormat.lower()))
465	                    else:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\sqlmap\lib\core\gui.py:11:0
10	import socket
11	import subprocess
12	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\sqlmap\lib\core\gui.py:176:18
175	
176	        process = subprocess.Popen([sys.executable or "python", os.path.join(paths.SQLMAP_ROOT_PATH, "sqlmap.py"), "-c", configFile], shell=False, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, stdin=subprocess.PIPE, bufsize=1, close_fds=not IS_WIN)
177	

--------------------------------------------------
>> Issue: [B405:blacklist] Using ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b405-import-xml-etree
   Location: .\sqlmap\lib\core\option.py:162:0
161	from thirdparty.socks import socks
162	from xml.etree.ElementTree import ElementTree
163	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\option.py:1065:12
1064	                break
1065	            except:
1066	                pass
1067	            finally:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\option.py:1143:16
1142	                    port = int(hostnamePort[1])
1143	                except:
1144	                    pass  # drops into the next check block
1145	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\lib\core\option.py:1454:16
1453	        if conf.randomAgent:
1454	            _ = random.sample([_[1] for _ in getPublicTypeMembers(MOBILES, True)], 1)[0]
1455	            conf.httpHeaders.append((HTTP_HEADER.USER_AGENT, _))

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\lib\core\patch.py:98:44
97	        if six.PY3:
98	            os.urandom = lambda size: bytes(random.randint(0, 255) for _ in range(size))
99	        else:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\lib\core\patch.py:100:50
99	        else:
100	            os.urandom = lambda size: "".join(chr(random.randint(0, 255)) for _ in xrange(size))
101	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\patch.py:181:4
180	        multiprocessing.util.get_temp_dir = lambda: tempDir
181	    except:
182	        pass
183	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\readlineng.py:16:4
15	        import pyreadline as _readline
16	    except:
17	        pass
18	

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b605_start_process_with_a_shell.html
   Location: .\sqlmap\lib\core\readlineng.py:40:23
39	
40	    (status, result) = commands.getstatusoutput("otool -L %s | grep libedit" % _readline.__file__)
41	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\lib\core\replication.py:78:29
77	            if len(values) == len(self.columns):
78	                self.execute('INSERT INTO "%s" VALUES (%s)' % (self.name, ','.join(['?'] * len(values))), safechardecode(values))
79	            else:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\lib\core\replication.py:109:16
108	            """
109	            _ = 'SELECT * FROM %s' % self.name
110	            if condition:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\sqlmap\lib\core\revision.py:10:0
9	import re
10	import subprocess
11	

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b607_start_process_with_partial_path.html
   Location: .\sqlmap\lib\core\revision.py:59:22
58	        try:
59	            process = subprocess.Popen("git rev-parse --verify HEAD", shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
60	            stdout, _ = process.communicate()

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\sqlmap\lib\core\revision.py:59:22
58	        try:
59	            process = subprocess.Popen("git rev-parse --verify HEAD", shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
60	            stdout, _ = process.communicate()

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\revision.py:63:8
62	            retVal = match.group(0) if match else None
63	        except:
64	            pass
65	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\lib\core\settings.py:133:101
132	# Google Search consent cookie
133	GOOGLE_CONSENT_COOKIE = "CONSENT=YES+shp.gws-%s-0-RC1.%s+FX+740" % (time.strftime("%Y%m%d"), "".join(random.sample(string.ascii_lowercase, 2)))
134	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '<empty>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b105_hardcoded_password_string.html
   Location: .\sqlmap\lib\core\settings.py:532:29
531	# Display marker for (cracked) empty password
532	HASH_EMPTY_PASSWORD_MARKER = "<empty>"
533	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'wxqc7vTeW8ohIcX+1wK55Mnql2Ex9cP+2s1dqTr/mjlZJVfLnq24fMAi08v5vRvOmuhVZQdOT/lhIRovWvIJrdECD1ud8VMPWpxY+NmjHoEx+VLK1/vCAUBwJe'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b105_hardcoded_password_string.html
   Location: .\sqlmap\lib\core\settings.py:704:28
703	# Github OAuth token used for creating an automatic Issue for unhandled exceptions
704	GITHUB_REPORT_OAUTH_TOKEN = "wxqc7vTeW8ohIcX+1wK55Mnql2Ex9cP+2s1dqTr/mjlZJVfLnq24fMAi08v5vRvOmuhVZQdOT/lhIRovWvIJrdECD1ud8VMPWpxY+NmjHoEx+VLK1/vCAUBwJe"
705	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\lib\core\settings.py:755:67
754	# Minor artistic touch
755	BANNER = re.sub(r"\[.\]", lambda _: "[\033[01;41m%s\033[01;49m]" % random.sample(HEURISTIC_CHECK_ALPHABET, 1)[0], BANNER)
756	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\shell.py:74:8
73	                pass
74	        except:
75	            pass
76	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\sqlmap\lib\core\subprocessng.py:12:0
11	import os
12	import subprocess
13	import time

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\sqlmap\lib\core\target.py:11:0
10	import re
11	import subprocess
12	import sys

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\target.py:760:12
759	                setattr(conf.data, UNENCODED_ORIGINAL_VALUE, original)
760	            except:
761	                pass
762	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\lib\core\testing.py:85:37
84	    while True:
85	        address, port = "127.0.0.1", random.randint(10000, 65535)
86	        try:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\testing.py:119:8
118	                break
119	        except:
120	            pass
121	        finally:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\threads.py:255:16
254	                    lock.release()
255	                except:
256	                    pass
257	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\sqlmap\lib\core\update.py:12:0
11	import shutil
12	import subprocess
13	import time

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b607_start_process_with_partial_path.html
   Location: .\sqlmap\lib\core\update.py:53:22
52	        try:
53	            process = subprocess.Popen("pip install -U sqlmap", shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, cwd=paths.SQLMAP_ROOT_PATH)
54	            pollProcess(process, True)

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\sqlmap\lib\core\update.py:53:22
52	        try:
53	            process = subprocess.Popen("pip install -U sqlmap", shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, cwd=paths.SQLMAP_ROOT_PATH)
54	            pollProcess(process, True)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\core\update.py:95:24
94	                                os.remove(_)
95	                        except:
96	                            pass
97	

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\sqlmap\lib\core\update.py:140:22
139	        try:
140	            process = subprocess.Popen("git checkout . && git pull %s HEAD" % GIT_REPOSITORY, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, cwd=paths.SQLMAP_ROOT_PATH)
141	            pollProcess(process, True)

--------------------------------------------------
>> Issue: [B406:blacklist] Using ContentHandler to parse untrusted XML data is known to be vulnerable to XML attacks. Replace ContentHandler with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b406-import-xml-sax
   Location: .\sqlmap\lib\parse\banner.py:10:0
9	
10	from xml.sax.handler import ContentHandler
11	

--------------------------------------------------
>> Issue: [B406:blacklist] Using ContentHandler to parse untrusted XML data is known to be vulnerable to XML attacks. Replace ContentHandler with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b406-import-xml-sax
   Location: .\sqlmap\lib\parse\handler.py:10:0
9	
10	from xml.sax.handler import ContentHandler
11	

--------------------------------------------------
>> Issue: [B406:blacklist] Using ContentHandler to parse untrusted XML data is known to be vulnerable to XML attacks. Replace ContentHandler with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b406-import-xml-sax
   Location: .\sqlmap\lib\parse\html.py:10:0
9	
10	from xml.sax.handler import ContentHandler
11	

--------------------------------------------------
>> Issue: [B405:blacklist] Using ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b405-import-xml-etree
   Location: .\sqlmap\lib\parse\payloads.py:11:0
10	
11	from xml.etree import ElementTree as et
12	

--------------------------------------------------
>> Issue: [B314:blacklist] Using xml.etree.ElementTree.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b313-b320-xml-bad-elementtree
   Location: .\sqlmap\lib\parse\payloads.py:90:14
89	    try:
90	        doc = et.parse(paths.BOUNDARIES_XML)
91	    except Exception as ex:

--------------------------------------------------
>> Issue: [B314:blacklist] Using xml.etree.ElementTree.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b313-b320-xml-bad-elementtree
   Location: .\sqlmap\lib\parse\payloads.py:114:18
113	        try:
114	            doc = et.parse(payloadFilePath)
115	        except Exception as ex:

--------------------------------------------------
>> Issue: [B501:request_with_no_cert_validation] Call to httpx with verify=False disabling SSL certificate checks, security issue.
   Severity: High   Confidence: High
   CWE: CWE-295 (https://cwe.mitre.org/data/definitions/295.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b501_request_with_no_cert_validation.html
   Location: .\sqlmap\lib\request\connect.py:628:29
627	                        proxy_mounts = dict(("%s://" % key, httpx.HTTPTransport(proxy="%s%s" % ("http://" if "://" not in kb.proxies[key] else "", kb.proxies[key]))) for key in kb.proxies) if kb.proxies else None
628	                        with httpx.Client(verify=False, http2=True, timeout=timeout, follow_redirects=True, cookies=conf.cj, mounts=proxy_mounts) as client:
629	                            conn = client.request(method or (HTTPMETHOD.POST if post is not None else HTTPMETHOD.GET), url, headers=headers, data=post)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\request\connect.py:783:12
782	                raise
783	            except:
784	                pass
785	            finally:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\lib\request\connect.py:1321:111
1320	                    origValue = match.group("value")
1321	                    newValue = randomizeParameterValue(origValue) if randomParameter not in kb.randomPool else random.sample(kb.randomPool[randomParameter], 1)[0]
1322	                    retVal = re.sub(r"(\A|\b)%s=[^&;]*" % re.escape(randomParameter), "%s=%s" % (randomParameter, newValue), paramString)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\lib\request\connect.py:1327:115
1326	                        origValue = match.group("value")
1327	                        newValue = randomizeParameterValue(origValue) if randomParameter not in kb.randomPool else random.sample(kb.randomPool[randomParameter], 1)[0]
1328	                        retVal = paramString.replace(match.group(0), "%s%s" % (match.group(2), newValue))

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\request\dns.py:98:8
97	            response = s.recv(512)
98	        except:
99	            pass
100	        finally:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\lib\request\inject.py:111:33
110	                    alias = randomStr(lowercase=True, seed=hash(expression))
111	                    expression = "SELECT %s FROM (%s)" % (field if '.' not in field else re.sub(r".+\.", "%s." % alias, field), expression)  # Note: MonetDB as a prime example
112	                    expression += " AS %s" % alias

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\lib\request\inject.py:114:33
113	                else:
114	                    expression = "SELECT %s FROM (%s)" % (field, expression)
115	

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b307-eval
   Location: .\sqlmap\lib\request\inject.py:537:24
536	        try:
537	            candidate = eval(repr(value).replace("\\\\x", "\\x").replace("u'", "'", 1)).decode(conf.encoding or UNICODE_ENCODING)
538	            if "\\x" not in candidate:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\request\inject.py:540:8
539	                value = candidate
540	        except:
541	            pass
542	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\request\redirecthandler.py:87:16
86	                    fp.fp._rbuf.write(content)
87	                except:
88	                    pass
89	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\sqlmap\lib\takeover\metasploit.py:18:0
17	
18	from subprocess import PIPE
19	

--------------------------------------------------
>> Issue: [B604:any_other_function_with_shell_equals_true] Function call with shell=True parameter identified, possible security issue.
   Severity: Medium   Confidence: Low
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b604_any_other_function_with_shell_equals_true.html
   Location: .\sqlmap\lib\takeover\metasploit.py:423:27
422	        logger.debug("executing local command: %s" % self._cliCmd)
423	        self._msfCliProc = execute(self._cliCmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE, close_fds=False)
424	

--------------------------------------------------
>> Issue: [B604:any_other_function_with_shell_equals_true] Function call with shell=True parameter identified, possible security issue.
   Severity: Medium   Confidence: Low
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b604_any_other_function_with_shell_equals_true.html
   Location: .\sqlmap\lib\takeover\metasploit.py:433:27
432	        logger.debug("executing local command: %s" % self._cliCmd)
433	        self._msfCliProc = execute(self._cliCmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE, close_fds=False)
434	

--------------------------------------------------
>> Issue: [B604:any_other_function_with_shell_equals_true] Function call with shell=True parameter identified, possible security issue.
   Severity: Medium   Confidence: Low
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b604_any_other_function_with_shell_equals_true.html
   Location: .\sqlmap\lib\takeover\metasploit.py:595:18
594	        logger.debug("executing local command: %s" % self._payloadCmd)
595	        process = execute(self._payloadCmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE, close_fds=False)
596	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\lib\takeover\udf.py:106:29
105	
106	            inject.goStacked("INSERT INTO %s(%s) VALUES (%s(%s))" % (self.cmdTblName, self.tblField, udfName, cmd))
107	            output = unArrayizeValue(inject.getValue("SELECT %s FROM %s" % (self.tblField, self.cmdTblName), resumeValue=False, firstChar=first, lastChar=last, safeCharEncode=False))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\lib\takeover\udf.py:107:53
106	            inject.goStacked("INSERT INTO %s(%s) VALUES (%s(%s))" % (self.cmdTblName, self.tblField, udfName, cmd))
107	            output = unArrayizeValue(inject.getValue("SELECT %s FROM %s" % (self.tblField, self.cmdTblName), resumeValue=False, firstChar=first, lastChar=last, safeCharEncode=False))
108	            inject.goStacked("DELETE FROM %s" % self.cmdTblName)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\lib\takeover\udf.py:108:29
107	            output = unArrayizeValue(inject.getValue("SELECT %s FROM %s" % (self.tblField, self.cmdTblName), resumeValue=False, firstChar=first, lastChar=last, safeCharEncode=False))
108	            inject.goStacked("DELETE FROM %s" % self.cmdTblName)
109	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\takeover\web.py:228:24
227	                            parseFilePaths(page)
228	                        except:
229	                            pass
230	                        finally:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\takeover\web.py:238:20
237	                        parseFilePaths(page)
238	                    except:
239	                        pass
240	                    finally:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\lib\takeover\xp_cmdshell.py:218:20
217	
218	            query = "SELECT %s FROM %s ORDER BY id" % (self.tblField, self.cmdTblName)
219	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\lib\takeover\xp_cmdshell.py:225:40
224	                output = []
225	                count = inject.getValue("SELECT COUNT(id) FROM %s" % self.cmdTblName, resumeValue=False, union=False, error=False, expected=EXPECTED.INT, charsetType=CHARSET_TYPE.DIGITS)
226	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\lib\takeover\xp_cmdshell.py:232:29
231	
232	            inject.goStacked("DELETE FROM %s" % self.cmdTblName)
233	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\lib\techniques\blind\inference.py:119:45
118	            right = original.split('<')[1]
119	            payload = payload.replace(right, "(SELECT %s FROM %s)" % (right, match.group(2).strip()))
120	            expression = match.group(1).strip()

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\techniques\error\use.py:292:8
291	            value = decodeHex(value, binary=False)
292	        except:
293	            pass
294	        finally:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\lib\techniques\error\use.py:397:44
396	                    for field in expressionFieldsList:
397	                        if _oneShotErrorUse("SELECT COUNT(%s) FROM %s" % (field, kb.dumpTable)) == '0':
398	                            emptyFields.append(field)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b105_hardcoded_password_string.html
   Location: .\sqlmap\lib\utils\api.py:74:18
73	class DataStore(object):
74	    admin_token = ""
75	    current_db = None

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\utils\api.py:201:12
200	                return self.process.wait()
201	            except:
202	                pass
203	        return None

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\utils\crawler.py:166:12
165	                    logger.warning("'sitemap.xml' not found")
166	            except:
167	                pass
168	            finally:

--------------------------------------------------
>> Issue: [B413:blacklist] The pyCrypto library and its module MODE_CBC are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b413-import-pycrypto
   Location: .\sqlmap\lib\utils\hash.py:16:4
15	try:
16	    from Crypto.Cipher.DES import MODE_CBC as CBC
17	    from Crypto.Cipher.DES import new as des

--------------------------------------------------
>> Issue: [B413:blacklist] The pyCrypto library and its module new are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b413-import-pycrypto
   Location: .\sqlmap\lib\utils\hash.py:17:4
16	    from Crypto.Cipher.DES import MODE_CBC as CBC
17	    from Crypto.Cipher.DES import new as des
18	except:

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:103:21
102	
103	    retVal = "*%s" % sha1(sha1(password).digest()).hexdigest()
104	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:103:26
102	
103	    retVal = "*%s" % sha1(sha1(password).digest()).hexdigest()
104	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:144:23
143	
144	    retVal = "md5%s" % md5(password + username).hexdigest()
145	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:178:33
177	
178	    retVal = "0100%s%s" % (salt, sha1(unistr + binsalt).hexdigest())
179	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:196:35
195	
196	    retVal = "0100%s%s%s" % (salt, sha1(unistr + binsalt).hexdigest(), sha1(unistr.upper() + binsalt).hexdigest())
197	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:196:71
195	
196	    retVal = "0100%s%s%s" % (salt, sha1(unistr + binsalt).hexdigest(), sha1(unistr.upper() + binsalt).hexdigest())
197	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:214:25
213	
214	    retVal = "s:%s%s" % (sha1(password + binsalt).hexdigest(), salt)
215	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:255:13
254	
255	    retVal = md5(password).hexdigest()
256	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:267:13
266	
267	    retVal = sha1(password).hexdigest()
268	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:279:48
278	
279	    return "{SHA}%s" % getText(base64.b64encode(sha1(password).digest()))
280	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:290:49
289	
290	    return "{SSHA}%s" % getText(base64.b64encode(sha1(password + salt).digest() + salt))
291	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:393:12
392	    ctx = password + magic + salt
393	    final = md5(password + salt + password).digest()
394	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:409:12
408	
409	    final = md5(ctx).digest()
410	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:430:16
429	
430	        final = md5(ctx1).digest()
431	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:449:22
448	
449	    return "%s:%s" % (md5(getBytes(password) + getBytes(salt)).hexdigest(), salt)
450	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:459:32
458	
459	    return "md5$%s$%s" % (salt, md5(getBytes(salt) + getBytes(password)).hexdigest())
460	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:469:33
468	
469	    return "sha1$%s$%s" % (salt, sha1(getBytes(salt) + getBytes(password)).hexdigest())
470	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:479:22
478	
479	    return "%s:%s" % (md5(binascii.hexlify(md5(getBytes(password)).digest()) + getBytes(salt)).hexdigest(), salt)
480	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hash.py:479:43
478	
479	    return "%s:%s" % (md5(binascii.hexlify(md5(getBytes(password)).digest()) + getBytes(salt)).hexdigest(), salt)
480	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\utils\hashdb.py:69:8
68	                threadData.hashDBCursor = None
69	        except:
70	            pass
71	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\utils\hashdb.py:77:12
76	                connection.close()
77	            except:
78	                pass
79	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\lib\utils\hashdb.py:83:21
82	        key = getBytes(key if isinstance(key, six.text_type) else repr(key), errors="xmlcharrefreplace")
83	        retVal = int(hashlib.md5(key).hexdigest(), 16) & 0x7fffffffffffffff  # Reference: http://stackoverflow.com/a/4448400
84	        return retVal

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: .\sqlmap\lib\utils\httpd.py:30:15
29	
30	HTTP_ADDRESS = "0.0.0.0"
31	HTTP_PORT = 8951

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\utils\purge.py:46:8
45	            os.chmod(filepath, stat.S_IREAD | stat.S_IWRITE)
46	        except:
47	            pass
48	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\lib\utils\purge.py:54:40
53	            with openFile(filepath, "w+b") as f:
54	                f.write("".join(_unichr(random.randint(0, 255)) for _ in xrange(filesize)))
55	        except:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\utils\purge.py:55:8
54	                f.write("".join(_unichr(random.randint(0, 255)) for _ in xrange(filesize)))
55	        except:
56	            pass
57	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\utils\purge.py:63:8
62	                pass
63	        except:
64	            pass
65	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\lib\utils\purge.py:69:80
68	        try:
69	            os.rename(filepath, os.path.join(os.path.dirname(filepath), "".join(random.sample(string.ascii_letters, random.randint(4, 8)))))
70	        except:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\lib\utils\purge.py:69:116
68	        try:
69	            os.rename(filepath, os.path.join(os.path.dirname(filepath), "".join(random.sample(string.ascii_letters, random.randint(4, 8)))))
70	        except:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\utils\purge.py:70:8
69	            os.rename(filepath, os.path.join(os.path.dirname(filepath), "".join(random.sample(string.ascii_letters, random.randint(4, 8)))))
70	        except:
71	            pass
72	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\lib\utils\purge.py:78:78
77	        try:
78	            os.rename(dirpath, os.path.join(os.path.dirname(dirpath), "".join(random.sample(string.ascii_letters, random.randint(4, 8)))))
79	        except:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\lib\utils\purge.py:78:114
77	        try:
78	            os.rename(dirpath, os.path.join(os.path.dirname(dirpath), "".join(random.sample(string.ascii_letters, random.randint(4, 8)))))
79	        except:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\utils\purge.py:79:8
78	            os.rename(dirpath, os.path.join(os.path.dirname(dirpath), "".join(random.sample(string.ascii_letters, random.randint(4, 8)))))
79	        except:
80	            pass
81	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\lib\utils\sqlalchemy.py:24:0
23	        warnings.simplefilter(action="ignore", category=_sqlalchemy.exc.SAWarning)
24	except:
25	    pass
26	finally:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\access\connector.py:10:0
9	    import pyodbc
10	except:
11	    pass
12	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\access\fingerprint.py:40:51
39	        if table is not None:
40	            result = inject.checkBooleanExpression("EXISTS(SELECT CURDIR() FROM %s)" % table)
41	            retVal = "not sandboxed" if result else "sandboxed"

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\access\fingerprint.py:70:55
69	
70	                result = inject.checkBooleanExpression("EXISTS(SELECT * FROM %s WHERE [RANDNUM]=[RANDNUM])" % table)
71	                if result is None:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\access\fingerprint.py:94:38
93	        randStr = randomStr()
94	        inject.checkBooleanExpression("EXISTS(SELECT * FROM %s.%s WHERE [RANDNUM]=[RANDNUM])" % (randStr, randStr))
95	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\cache\connector.py:11:0
10	    import jpype
11	except:
12	    pass
13	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\cratedb\connector.py:13:0
12	    psycopg2.extensions.register_type(psycopg2.extensions.UNICODEARRAY)
13	except:
14	    pass
15	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\cubrid\connector.py:10:0
9	    import CUBRIDdb
10	except:
11	    pass
12	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\db2\connector.py:10:0
9	    import ibm_db_dbi
10	except:
11	    pass
12	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\db2\fingerprint.py:29:51
28	        for version in reversed(xrange(5, 15)):
29	            result = inject.checkBooleanExpression("(SELECT COUNT(*) FROM sysibm.sysversions WHERE versionnumber BETWEEN %d000000 AND %d999999)>0" % (version, version))
30	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\db2\fingerprint.py:35:59
34	                for version in reversed(xrange(0, 20)):
35	                    result = inject.checkBooleanExpression("(SELECT COUNT(*) FROM sysibm.sysversions WHERE versionnumber BETWEEN %d%02d0000 AND %d%02d9999)>0" % (major, version, major, version))
36	                    if result:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\db2\fingerprint.py:152:24
151	            for version, data in versions.items():
152	                query = "(SELECT LENGTH(OS_VERSION) FROM SYSIBMADM.ENV_SYS_INFO WHERE OS_VERSION = '%s')>0" % data[0]
153	                result = inject.checkBooleanExpression(query)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\db2\fingerprint.py:165:24
164	            for sp in versions[Backend.getOsVersion()][1]:
165	                query = "(SELECT LENGTH(OS_RELEASE) FROM SYSIBMADM.ENV_SYS_INFO WHERE OS_RELEASE LIKE '%Service Pack " + str(sp) + "%')>0"
166	                result = inject.checkBooleanExpression(query)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\derby\connector.py:10:0
9	    import drda
10	except:
11	    pass
12	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\firebird\connector.py:10:0
9	    import kinterbasdb
10	except:
11	    pass
12	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\hsqldb\connector.py:11:0
10	    import jpype
11	except:
12	    pass
13	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\informix\connector.py:10:0
9	    import ibm_db_dbi
10	except:
11	    pass
12	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\informix\fingerprint.py:100:55
99	            for version in ("14.1", "12.1", "11.7", "11.5", "10.0"):
100	                output = inject.checkBooleanExpression("EXISTS(SELECT 1 FROM SYSMASTER:SYSDUAL WHERE DBINFO('VERSION,'FULL') LIKE '%%%s%%')" % version)
101	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\maxdb\fingerprint.py:44:51
43	        for version in (6, 7):
44	            result = inject.checkBooleanExpression("%d=(SELECT MAJORVERSION FROM SYSINFO.VERSION)" % version)
45	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\maxdb\fingerprint.py:50:51
49	        for version in xrange(0, 10):
50	            result = inject.checkBooleanExpression("%d=(SELECT MINORVERSION FROM SYSINFO.VERSION)" % version)
51	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\mimersql\connector.py:10:0
9	    import mimerpy
10	except:
11	    pass
12	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\monetdb\connector.py:10:0
9	    import pymonetdb
10	except:
11	    pass
12	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\mssqlserver\connector.py:11:0
10	    import pymssql
11	except:
12	    pass
13	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\mssqlserver\filesystem.py:104:24
103	        # Reference: https://web.archive.org/web/20120211184457/http://support.microsoft.com/kb/104829
104	        binToHexQuery = """DECLARE @charset VARCHAR(16)
105	        DECLARE @counter INT
106	        DECLARE @hexstr VARCHAR(4096)
107	        DECLARE @length INT
108	        DECLARE @chunk INT
109	
110	        SET @charset = '0123456789ABCDEF'
111	        SET @counter = 1
112	        SET @hexstr = ''
113	        SET @length = (SELECT DATALENGTH(%s) FROM %s)
114	        SET @chunk = 1024
115	
116	        WHILE (@counter <= @length)
117	        BEGIN
118	            DECLARE @tempint INT
119	            DECLARE @firstint INT
120	            DECLARE @secondint INT
121	
122	            SET @tempint = CONVERT(INT, (SELECT ASCII(SUBSTRING(%s, @counter, 1)) FROM %s))
123	            SET @firstint = floor(@tempint/16)
124	            SET @secondint = @tempint - (@firstint * 16)
125	            SET @hexstr = @hexstr + SUBSTRING(@charset, @firstint+1, 1) + SUBSTRING(@charset, @secondint+1, 1)
126	
127	            SET @counter = @counter + 1
128	
129	            IF @counter %% @chunk = 0
130	            BEGIN
131	                INSERT INTO %s(%s) VALUES(@hexstr)
132	                SET @hexstr = ''
133	            END
134	        END
135	
136	        IF @counter %% (@chunk) != 0
137	        BEGIN
138	            INSERT INTO %s(%s) VALUES(@hexstr)
139	        END
140	        """ % (self.tblField, txtTbl, self.tblField, txtTbl, hexTbl, self.tblField, hexTbl, self.tblField)
141	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\mssqlserver\filesystem.py:146:37
145	        if isTechniqueAvailable(PAYLOAD.TECHNIQUE.UNION):
146	            result = inject.getValue("SELECT %s FROM %s ORDER BY id ASC" % (self.tblField, hexTbl), resumeValue=False, blind=False, time=False, error=False)
147	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\mssqlserver\filesystem.py:150:36
149	            result = []
150	            count = inject.getValue("SELECT COUNT(*) FROM %s" % (hexTbl), resumeValue=False, expected=EXPECTED.INT, charsetType=CHARSET_TYPE.DIGITS)
151	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\mssqlserver\filesystem.py:160:40
159	            for index in indexRange:
160	                chunk = inject.getValue("SELECT TOP 1 %s FROM %s WHERE %s NOT IN (SELECT TOP %d %s FROM %s ORDER BY id ASC) ORDER BY id ASC" % (self.tblField, hexTbl, self.tblField, index, self.tblField, hexTbl), unpack=False, resumeValue=False, charsetType=CHARSET_TYPE.HEXADECIMAL)
161	                result.append(chunk)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\mssqlserver\fingerprint.py:143:25
142	        self.createSupportTbl(self.fileTblName, self.tblField, "varchar(1000)")
143	        inject.goStacked("INSERT INTO %s(%s) VALUES (%s)" % (self.fileTblName, self.tblField, "@@VERSION"))
144	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\mssqlserver\fingerprint.py:161:20
160	        for version, data in versions.items():
161	            query = "EXISTS(SELECT %s FROM %s WHERE %s " % (self.tblField, self.fileTblName, self.tblField)
162	            query += "LIKE '%Windows NT " + data[0] + "%')"

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\mssqlserver\fingerprint.py:186:20
185	        for sp in sps:
186	            query = "EXISTS(SELECT %s FROM %s WHERE %s " % (self.tblField, self.fileTblName, self.tblField)
187	            query += "LIKE '%Service Pack " + getUnicode(sp) + "%')"

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\mysql\connector.py:10:0
9	    import pymysql
10	except:
11	    pass
12	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\mysql\filesystem.py:62:33
61	
62	        length = inject.getValue("SELECT LENGTH(%s) FROM %s" % (self.tblField, self.fileTblName), resumeValue=False, expected=EXPECTED.INT, charsetType=CHARSET_TYPE.DIGITS)
63	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\mysql\filesystem.py:83:44
82	                for i in xrange(1, length, chunkSize):
83	                    chunk = inject.getValue("SELECT MID(%s, %d, %d) FROM %s" % (self.tblField, i, chunkSize, self.fileTblName), unpack=False, resumeValue=False, charsetType=CHARSET_TYPE.HEXADECIMAL)
84	                    result.append(chunk)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\mysql\filesystem.py:86:41
85	            else:
86	                result = inject.getValue("SELECT %s FROM %s" % (self.tblField, self.fileTblName), resumeValue=False, charsetType=CHARSET_TYPE.HEXADECIMAL)
87	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\mysql\filesystem.py:175:25
174	        # Reference: http://dev.mysql.com/doc/refman/5.1/en/select.html
175	        inject.goStacked("SELECT %s FROM %s INTO DUMPFILE '%s'" % (self.tblField, self.fileTblName, remoteFile), silent=True)
176	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\oracle\filesystem.py:40:42
39	            kb.fileReadMode = True
40	            fileContent = inject.getValue("SELECT RAWTOHEX(OSREADFILE('%s')) FROM DUAL" % remoteFile, charsetType=CHARSET_TYPE.HEXADECIMAL)
41	            kb.fileReadMode = False

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\oracle\fingerprint.py:129:55
128	                number = int(re.search(r"([\d]+)", version).group(1))
129	                output = inject.checkBooleanExpression("%d=(SELECT SUBSTR((VERSION),1,%d) FROM SYS.PRODUCT_COMPONENT_VERSION WHERE ROWNUM=1)" % (number, 1 if number < 10 else 2))
130	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\postgresql\connector.py:13:0
12	    psycopg2.extensions.register_type(psycopg2.extensions.UNICODEARRAY)
13	except:
14	    pass
15	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\postgresql\filesystem.py:59:25
58	        inject.goStacked("SELECT lo_create(%d)" % self.oid)
59	        inject.goStacked("DELETE FROM pg_largeobject WHERE loid=%d" % self.oid)
60	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\postgresql\filesystem.py:68:29
67	
68	            inject.goStacked("INSERT INTO pg_largeobject VALUES (%d, %d, DECODE((SELECT %s FROM %s), 'base64'))" % (self.oid, self.page, self.tblField, self.fileTblName))
69	            inject.goStacked("DELETE FROM %s" % self.fileTblName)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\postgresql\filesystem.py:69:29
68	            inject.goStacked("INSERT INTO pg_largeobject VALUES (%d, %d, DECODE((SELECT %s FROM %s), 'base64'))" % (self.oid, self.page, self.tblField, self.fileTblName))
69	            inject.goStacked("DELETE FROM %s" % self.fileTblName)
70	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\postgresql\fingerprint.py:212:25
211	        self.createSupportTbl(self.fileTblName, self.tblField, "character(10000)")
212	        inject.goStacked("INSERT INTO %s(%s) VALUES (%s)" % (self.fileTblName, self.tblField, "VERSION()"))
213	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\postgresql\fingerprint.py:219:20
218	        for osPattern in osWindows:
219	            query = "(SELECT LENGTH(%s) FROM %s WHERE %s " % (self.tblField, self.fileTblName, self.tblField)
220	            query += "LIKE '%" + osPattern + "%')>0"

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b108_hardcoded_tmp_directory.html
   Location: .\sqlmap\plugins\dbms\postgresql\takeover.py:44:33
43	            # read/write/execute access is valid
44	            self.udfRemoteFile = "/tmp/%s.%s" % (self.udfSharedLibName, self.udfSharedLibExt)
45	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\dbms\postgresql\takeover.py:110:20
109	
110	            query = "SELECT %s FROM %s" % (self.tblField, self.cmdTblName)
111	            output = inject.getValue(query, resumeValue=False)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\presto\connector.py:10:0
9	    import prestodb
10	except:
11	    pass
12	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\sqlite\connector.py:10:0
9	    import sqlite3
10	except:
11	    pass
12	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\sybase\connector.py:11:0
10	    import pymssql
11	except:
12	    pass
13	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\plugins\dbms\vertica\connector.py:10:0
9	    import vertica_python
10	except:
11	    pass
12	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\generic\databases.py:976:20
975	        if Backend.getIdentifiedDbms() in (DBMS.SQLITE, DBMS.ACCESS, DBMS.FIREBIRD, DBMS.MCKOI, DBMS.EXTREMEDB):
976	            query = "SELECT %s FROM %s" % (queries[Backend.getIdentifiedDbms()].count.query % '*', safeSQLIdentificatorNaming(table, True))
977	        else:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\generic\databases.py:978:20
977	        else:
978	            query = "SELECT %s FROM %s.%s" % (queries[Backend.getIdentifiedDbms()].count.query % '*', safeSQLIdentificatorNaming(db), safeSQLIdentificatorNaming(table, True))
979	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\generic\entries.py:396:69
395	                            for column in colList:
396	                                if not inject.checkBooleanExpression("(SELECT COUNT(%s) FROM %s)>0" % (column, kb.dumpTable)):
397	                                    emptyColumns.append(column)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\generic\filesystem.py:53:26
52	        elif Backend.isDbms(DBMS.PGSQL) and not fileRead:
53	            lengthQuery = "SELECT SUM(LENGTH(data)) FROM pg_largeobject WHERE loid=%d" % self.oid
54	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\generic\filesystem.py:57:29
56	            self.createSupportTbl(self.fileTblName, self.tblField, "VARBINARY(MAX)")
57	            inject.goStacked("INSERT INTO %s(%s) SELECT %s FROM OPENROWSET(BULK '%s', SINGLE_BLOB) AS %s(%s)" % (self.fileTblName, self.tblField, self.tblField, remoteFile, self.fileTblName, self.tblField))
58	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\generic\filesystem.py:59:26
58	
59	            lengthQuery = "SELECT DATALENGTH(%s) FROM %s" % (self.tblField, self.fileTblName)
60	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\generic\filesystem.py:113:34
112	            if counter == 0:
113	                sqlQueries.append("INSERT INTO %s(%s) VALUES (%s)" % (self.fileTblName, self.tblField, fcEncodedLine))
114	            else:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: .\sqlmap\plugins\generic\filesystem.py:116:34
115	                updatedField = agent.simpleConcatenate(self.tblField, fcEncodedLine)
116	                sqlQueries.append("UPDATE %s SET %s=%s" % (self.fileTblName, self.tblField, updatedField))
117	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b108_hardcoded_tmp_directory.html
   Location: .\sqlmap\plugins\generic\misc.py:64:31
63	            else:
64	                conf.tmpPath = "/tmp"
65	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\luanginx.py:35:57
34	
35	    hints[HINT.PREPEND] = delimiter.join("%s=" % "".join(random.sample(string.ascii_letters + string.digits, 2)) for _ in xrange(500))
36	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\luanginxmore.py:37:57
36	
37	    hints[HINT.PREPEND] = delimiter.join("%s=" % "".join(random.sample(string.ascii_letters + string.digits, 2)) for _ in xrange(4194304))
38	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\multiplespaces.py:47:85
46	        for word in words:
47	            retVal = re.sub(r"(?<=\W)%s(?=[^A-Za-z_(]|\Z)" % word, "%s%s%s" % (' ' * random.randint(1, 4), word, ' ' * random.randint(1, 4)), retVal)
48	            retVal = re.sub(r"(?<=\W)%s(?=[(])" % word, "%s%s" % (' ' * random.randint(1, 4), word), retVal)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\multiplespaces.py:47:119
46	        for word in words:
47	            retVal = re.sub(r"(?<=\W)%s(?=[^A-Za-z_(]|\Z)" % word, "%s%s%s" % (' ' * random.randint(1, 4), word, ' ' * random.randint(1, 4)), retVal)
48	            retVal = re.sub(r"(?<=\W)%s(?=[(])" % word, "%s%s" % (' ' * random.randint(1, 4), word), retVal)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\multiplespaces.py:48:72
47	            retVal = re.sub(r"(?<=\W)%s(?=[^A-Za-z_(]|\Z)" % word, "%s%s%s" % (' ' * random.randint(1, 4), word, ' ' * random.randint(1, 4)), retVal)
48	            retVal = re.sub(r"(?<=\W)%s(?=[(])" % word, "%s%s" % (' ' * random.randint(1, 4), word), retVal)
49	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\space2dash.py:39:36
38	            if payload[i].isspace():
39	                randomStr = ''.join(random.choice(string.ascii_uppercase + string.ascii_lowercase) for _ in xrange(random.randint(6, 12)))
40	                retVal += "--%s%%0A" % randomStr

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\space2dash.py:39:115
38	            if payload[i].isspace():
39	                randomStr = ''.join(random.choice(string.ascii_uppercase + string.ascii_lowercase) for _ in xrange(random.randint(6, 12)))
40	                retVal += "--%s%%0A" % randomStr

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\space2hash.py:47:36
46	            if payload[i].isspace():
47	                randomStr = ''.join(random.choice(string.ascii_uppercase + string.ascii_lowercase) for _ in xrange(random.randint(6, 12)))
48	                retVal += "%%23%s%%0A" % randomStr

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\space2hash.py:47:115
46	            if payload[i].isspace():
47	                randomStr = ''.join(random.choice(string.ascii_uppercase + string.ascii_lowercase) for _ in xrange(random.randint(6, 12)))
48	                retVal += "%%23%s%%0A" % randomStr

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\space2morehash.py:47:28
46	        word = match.group('word')
47	        randomStr = ''.join(random.choice(string.ascii_uppercase + string.ascii_lowercase) for _ in xrange(random.randint(6, 12)))
48	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\space2morehash.py:47:107
46	        word = match.group('word')
47	        randomStr = ''.join(random.choice(string.ascii_uppercase + string.ascii_lowercase) for _ in xrange(random.randint(6, 12)))
48	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\space2morehash.py:61:36
60	            if payload[i].isspace():
61	                randomStr = ''.join(random.choice(string.ascii_uppercase + string.ascii_lowercase) for _ in xrange(random.randint(6, 12)))
62	                retVal += "%%23%s%%0A" % randomStr

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\space2morehash.py:61:115
60	            if payload[i].isspace():
61	                randomStr = ''.join(random.choice(string.ascii_uppercase + string.ascii_lowercase) for _ in xrange(random.randint(6, 12)))
62	                retVal += "%%23%s%%0A" % randomStr

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\space2mssqlblank.py:67:30
66	                    firstspace = True
67	                    retVal += random.choice(blanks)
68	                    continue

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\space2mssqlblank.py:81:30
80	                if end:
81	                    retVal += random.choice(blanks[:-1])
82	                else:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\space2mssqlblank.py:83:30
82	                else:
83	                    retVal += random.choice(blanks)
84	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\space2mysqlblank.py:57:30
56	                    firstspace = True
57	                    retVal += random.choice(blanks)
58	                    continue

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\space2mysqlblank.py:67:26
66	            elif payload[i] == " " and not doublequote and not quote:
67	                retVal += random.choice(blanks)
68	                continue

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\space2randomblank.py:52:30
51	                    firstspace = True
52	                    retVal += random.choice(blanks)
53	                    continue

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\space2randomblank.py:62:26
61	            elif payload[i] == ' ' and not doublequote and not quote:
62	                retVal += random.choice(blanks)
63	                continue

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\xforwardedfor.py:22:17
21	    while not octets or octets[0] in (10, 172, 192):
22	        octets = random.sample(xrange(1, 255), 4)
23	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\tamper\xforwardedfor.py:42:30
41	    # Reference: https://wordpress.org/support/topic/blocked-country-gaining-access-via-cloudflare/#post-9812007
42	    headers["CF-IPCountry"] = random.sample(('GB', 'US', 'FR', 'AU', 'CA', 'NZ', 'BE', 'DK', 'FI', 'IE', 'AT', 'IT', 'LU', 'NL', 'NO', 'PT', 'SE', 'ES', 'CH'), 1)[0]
43	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\sqlmap\thirdparty\bottle\bottle.py:100:4
99	    from types import ModuleType as new_module
100	    import pickle
101	    from io import BytesIO

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with cPickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\sqlmap\thirdparty\bottle\bottle.py:126:4
125	    from itertools import imap
126	    import cPickle as pickle
127	    from imp import new_module

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b102_exec_used.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:135:4
134	    json_loads = json_lds
135	    exec(compile('def _raise(*a): raise a[0], a[1], a[2]', '<py3fix>', 'exec'))
136	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b101_assert_used.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:1232:16
1231	            else:
1232	                assert expected_len >= 2  # (CR)LFCRLF or (CRLF)CRLF
1233	                self.headers_end_expected = None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b101_assert_used.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:1234:8
1233	                self.headers_end_expected = None
1234	        assert self.headers_end_expected is None
1235	        s = self.end_headers_patt.search(chunk, base)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b101_assert_used.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:1270:8
1269	        slen = end - start
1270	        assert slen <= self.tlen
1271	        for i, thead in idxs:  # idxs is 1-based index

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b101_assert_used.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:1303:16
1302	            else:
1303	                assert cur_meth == self._eat_start_boundary
1304	                sec_name = 'data'

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b101_assert_used.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:1313:20
1312	                if abs_end_section < 0:
1313	                    assert abs_end_section == -CRLF_LEN
1314	                    end_section = -self.abspos

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b101_assert_used.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:1381:16
1380	            if part is not None:
1381	                assert trest is None
1382	                matched_len = match_tail(part, 0, part_len)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b101_assert_used.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:1511:8
1510	        sec_name, [start, end] = null_data
1511	        assert sec_name == 'data'
1512	        if end > 0:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b101_assert_used.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:1520:12
1519	            sec_name, headers_slice = headers
1520	            assert sec_name == 'headers'
1521	            if not data:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b101_assert_used.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:1526:12
1525	            sec_name, data_slice = data
1526	            assert sec_name == 'data'
1527	            field = cls()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b101_assert_used.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:2066:8
2065	        cls = cls or BaseResponse
2066	        assert issubclass(cls, BaseResponse)
2067	        copy = cls()

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:2560:8
2559	            return type(val) if type else val
2560	        except Exception:
2561	            pass
2562	        return default

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:3305:15
3304	                                   clen, filename)
3305	        etag = hashlib.sha1(tob(etag)).hexdigest()
3306	

--------------------------------------------------
>> Issue: [B412:blacklist] Consider possible security implications associated with CGIHandler module.
   Severity: High   Confidence: High
   CWE: CWE-284 (https://cwe.mitre.org/data/definitions/284.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b412-import-httpoxy
   Location: .\sqlmap\thirdparty\bottle\bottle.py:3627:8
3626	    def run(self, handler):  # pragma: no cover
3627	        from wsgiref.handlers import CGIHandler
3628	

--------------------------------------------------
>> Issue: [B412:blacklist] Consider possible security implications associated with wsgiref.handlers.CGIHandler module.
   Severity: High   Confidence: High
   CWE: CWE-284 (https://cwe.mitre.org/data/definitions/284.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b412-import-httpoxy
   Location: .\sqlmap\thirdparty\bottle\bottle.py:3633:8
3632	
3633	        CGIHandler().run(fixed_environ)
3634	

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b307-eval
   Location: .\sqlmap\thirdparty\bottle\bottle.py:4002:11
4001	    namespace[package_name] = sys.modules[package_name]
4002	    return eval('%s.%s' % (module, target), namespace)
4003	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\sqlmap\thirdparty\bottle\bottle.py:4051:8
4050	    if reloader and not os.environ.get('BOTTLE_CHILD'):
4051	        import subprocess
4052	        fd, lockfile = tempfile.mkstemp(prefix='bottle.', suffix='.lock')

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:4065:20
4064	            while os.path.exists(lockfile):
4065	                p = subprocess.Popen(args, env=environ)
4066	                while p.poll() is None:

--------------------------------------------------
>> Issue: [B702:use_of_mako_templates] Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b702_use_of_mako_templates.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:4276:23
4275	        if self.source:
4276	            self.tpl = Template(self.source, lookup=lookup, **options)
4277	        else:

--------------------------------------------------
>> Issue: [B702:use_of_mako_templates] Mako templates allow HTML/JS rendering by default and are inherently open to XSS attacks. Ensure variables in all templates are properly sanitized via the 'n', 'h' or 'x' flags (depending on context). For example, to HTML escape the variable 'data' do ${ data |h }.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b702_use_of_mako_templates.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:4278:23
4277	        else:
4278	            self.tpl = Template(uri=self.name,
4279	                                filename=self.filename,
4280	                                lookup=lookup, **options)
4281	

--------------------------------------------------
>> Issue: [B701:jinja2_autoescape_false] By default, jinja2 sets autoescape to False. Consider using autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.
   Severity: High   Confidence: High
   CWE: CWE-94 (https://cwe.mitre.org/data/definitions/94.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b701_jinja2_autoescape_false.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:4314:19
4313	        from jinja2 import Environment, FunctionLoader
4314	        self.env = Environment(loader=FunctionLoader(self.loader), **kwargs)
4315	        if filters: self.env.filters.update(filters)

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b102_exec_used.html
   Location: .\sqlmap\thirdparty\bottle\bottle.py:4397:8
4396	        })
4397	        exec(self.co, env)
4398	        if env.get('_rebase'):

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\thirdparty\clientform\clientform.py:299:25
298	    # follow IE and firefox
299	    nonce = "".join([str(random.randint(0, sys.maxsize-1)) for i in (0,1,2)])
300	    return "-"*27 + nonce

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b101_assert_used.html
   Location: .\sqlmap\thirdparty\clientform\clientform.py:2029:8
2028	    def add_to_form(self, form):
2029	        assert self._form is None or form == self._form, (
2030	            "can't add control to more than one form")
2031	        self._form = form

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b101_assert_used.html
   Location: .\sqlmap\thirdparty\clientform\clientform.py:2048:8
2047	    def merge_control(self, control):
2048	        assert bool(control.multiple) == bool(self.multiple)
2049	        # usually, isinstance(control, self.__class__)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b101_assert_used.html
   Location: .\sqlmap\thirdparty\clientform\clientform.py:2148:8
2147	    def _single_set_value(self, value):
2148	        assert len(value) == 1
2149	        on, off = self._get_items(value[0])

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b101_assert_used.html
   Location: .\sqlmap\thirdparty\clientform\clientform.py:2150:8
2149	        on, off = self._get_items(value[0])
2150	        assert len(on) <= 1
2151	        if not on:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b101_assert_used.html
   Location: .\sqlmap\thirdparty\clientform\clientform.py:3320:8
3319	            raise ControlNotFoundError("no control matching "+description)
3320	        assert False
3321	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\thirdparty\identywaf\identYwaf.py:109:4
108	
109	_ = random.randint(20, 64)
110	DEFAULT_USER_AGENT = "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; %s; rv:%d.0) Gecko/20100101 Firefox/%d.0" % (NAME, _, _)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\thirdparty\identywaf\identYwaf.py:149:12
148	                raise
149	            except:
150	                pass
151	            else:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b110_try_except_pass.html
   Location: .\sqlmap\thirdparty\identywaf\identYwaf.py:175:8
174	            break
175	        except:
176	            pass
177	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\thirdparty\identywaf\identYwaf.py:206:31
205	    if options.post:
206	        _ = "%s=%s" % ("".join(random.sample(string.ascii_letters, 3)), quote(payload))
207	        intrusive = retrieve(options.url, _)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\thirdparty\identywaf\identYwaf.py:209:88
208	    else:
209	        _ = "%s%s%s=%s" % (options.url, '?' if '?' not in options.url else '&', "".join(random.sample(string.ascii_letters, 3)), quote(payload))
210	        intrusive = retrieve(_)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\thirdparty\identywaf\identYwaf.py:214:70
213	        if payload == HEURISTIC_PAYLOAD:
214	            match = re.search(re.sub(r"Server:|Protected by", "".join(random.sample(string.ascii_letters, 6)), WAF_RECOGNITION_REGEX, flags=re.I), intrusive[RAW] or "")
215	            if match:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\thirdparty\identywaf\identYwaf.py:390:19
389	    if options.random_agent:
390	        revision = random.randint(20, 64)
391	        platform = random.sample(("X11; %s %s" % (random.sample(("Linux", "Ubuntu; Linux", "U; Linux", "U; OpenBSD", "U; FreeBSD"), 1)[0], random.sample(("amd64", "i586", "i686", "amd64"), 1)[0]), "Windows NT %s%s" % (random.sample(("5.0", "5.1", "5.2", "6.0", "6.1", "6.2", "6.3", "10.0"), 1)[0], random.sample(("", "; Win64", "; WOW64"), 1)[0]), "Macintosh; Intel Mac OS X 10.%s" % random.randint(1, 11)), 1)[0]

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\thirdparty\identywaf\identYwaf.py:391:19
390	        revision = random.randint(20, 64)
391	        platform = random.sample(("X11; %s %s" % (random.sample(("Linux", "Ubuntu; Linux", "U; Linux", "U; OpenBSD", "U; FreeBSD"), 1)[0], random.sample(("amd64", "i586", "i686", "amd64"), 1)[0]), "Windows NT %s%s" % (random.sample(("5.0", "5.1", "5.2", "6.0", "6.1", "6.2", "6.3", "10.0"), 1)[0], random.sample(("", "; Win64", "; WOW64"), 1)[0]), "Macintosh; Intel Mac OS X 10.%s" % random.randint(1, 11)), 1)[0]
392	        user_agent = "Mozilla/5.0 (%s; rv:%d.0) Gecko/20100101 Firefox/%d.0" % (platform, revision, revision)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\thirdparty\identywaf\identYwaf.py:391:50
390	        revision = random.randint(20, 64)
391	        platform = random.sample(("X11; %s %s" % (random.sample(("Linux", "Ubuntu; Linux", "U; Linux", "U; OpenBSD", "U; FreeBSD"), 1)[0], random.sample(("amd64", "i586", "i686", "amd64"), 1)[0]), "Windows NT %s%s" % (random.sample(("5.0", "5.1", "5.2", "6.0", "6.1", "6.2", "6.3", "10.0"), 1)[0], random.sample(("", "; Win64", "; WOW64"), 1)[0]), "Macintosh; Intel Mac OS X 10.%s" % random.randint(1, 11)), 1)[0]
392	        user_agent = "Mozilla/5.0 (%s; rv:%d.0) Gecko/20100101 Firefox/%d.0" % (platform, revision, revision)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\thirdparty\identywaf\identYwaf.py:391:139
390	        revision = random.randint(20, 64)
391	        platform = random.sample(("X11; %s %s" % (random.sample(("Linux", "Ubuntu; Linux", "U; Linux", "U; OpenBSD", "U; FreeBSD"), 1)[0], random.sample(("amd64", "i586", "i686", "amd64"), 1)[0]), "Windows NT %s%s" % (random.sample(("5.0", "5.1", "5.2", "6.0", "6.1", "6.2", "6.3", "10.0"), 1)[0], random.sample(("", "; Win64", "; WOW64"), 1)[0]), "Macintosh; Intel Mac OS X 10.%s" % random.randint(1, 11)), 1)[0]
392	        user_agent = "Mozilla/5.0 (%s; rv:%d.0) Gecko/20100101 Firefox/%d.0" % (platform, revision, revision)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\thirdparty\identywaf\identYwaf.py:391:218
390	        revision = random.randint(20, 64)
391	        platform = random.sample(("X11; %s %s" % (random.sample(("Linux", "Ubuntu; Linux", "U; Linux", "U; OpenBSD", "U; FreeBSD"), 1)[0], random.sample(("amd64", "i586", "i686", "amd64"), 1)[0]), "Windows NT %s%s" % (random.sample(("5.0", "5.1", "5.2", "6.0", "6.1", "6.2", "6.3", "10.0"), 1)[0], random.sample(("", "; Win64", "; WOW64"), 1)[0]), "Macintosh; Intel Mac OS X 10.%s" % random.randint(1, 11)), 1)[0]
392	        user_agent = "Mozilla/5.0 (%s; rv:%d.0) Gecko/20100101 Firefox/%d.0" % (platform, revision, revision)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\thirdparty\identywaf\identYwaf.py:391:298
390	        revision = random.randint(20, 64)
391	        platform = random.sample(("X11; %s %s" % (random.sample(("Linux", "Ubuntu; Linux", "U; Linux", "U; OpenBSD", "U; FreeBSD"), 1)[0], random.sample(("amd64", "i586", "i686", "amd64"), 1)[0]), "Windows NT %s%s" % (random.sample(("5.0", "5.1", "5.2", "6.0", "6.1", "6.2", "6.3", "10.0"), 1)[0], random.sample(("", "; Win64", "; WOW64"), 1)[0]), "Macintosh; Intel Mac OS X 10.%s" % random.randint(1, 11)), 1)[0]
392	        user_agent = "Mozilla/5.0 (%s; rv:%d.0) Gecko/20100101 Firefox/%d.0" % (platform, revision, revision)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\thirdparty\identywaf\identYwaf.py:391:384
390	        revision = random.randint(20, 64)
391	        platform = random.sample(("X11; %s %s" % (random.sample(("Linux", "Ubuntu; Linux", "U; Linux", "U; OpenBSD", "U; FreeBSD"), 1)[0], random.sample(("amd64", "i586", "i686", "amd64"), 1)[0]), "Windows NT %s%s" % (random.sample(("5.0", "5.1", "5.2", "6.0", "6.1", "6.2", "6.3", "10.0"), 1)[0], random.sample(("", "; Win64", "; WOW64"), 1)[0]), "Macintosh; Intel Mac OS X 10.%s" % random.randint(1, 11)), 1)[0]
392	        user_agent = "Mozilla/5.0 (%s; rv:%d.0) Gecko/20100101 Firefox/%d.0" % (platform, revision, revision)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random
   Location: .\sqlmap\thirdparty\identywaf\identYwaf.py:492:41
491	            for i in xrange(VERIFY_RETRY_TIMES):
492	                if not check_payload(str(random.randint(1, 9)), protection_regex):
493	                    break

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: .\sqlmap\thirdparty\keepalive\keepalive.py:504:17
503	        try:
504	            fo = _urllib.request.urlopen(url)
505	            foo = fo.read()

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: .\sqlmap\thirdparty\keepalive\keepalive.py:526:9
525	    _urllib.request.install_opener(opener)
526	    fo = _urllib.request.urlopen(url)
527	    foo = fo.read()

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\thirdparty\keepalive\keepalive.py:529:8
528	    fo.close()
529	    m = md5(foo)
530	    print(format % ('normal urllib', m.hexdigest()))

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: .\sqlmap\thirdparty\keepalive\keepalive.py:536:9
535	
536	    fo = _urllib.request.urlopen(url)
537	    foo = fo.read()

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\thirdparty\keepalive\keepalive.py:539:8
538	    fo.close()
539	    m = md5(foo)
540	    print(format % ('keepalive read', m.hexdigest()))

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: .\sqlmap\thirdparty\keepalive\keepalive.py:542:9
541	
542	    fo = _urllib.request.urlopen(url)
543	    foo = ''

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b324_hashlib.html
   Location: .\sqlmap\thirdparty\keepalive\keepalive.py:549:8
548	    fo.close()
549	    m = md5(foo)
550	    print(format % ('keepalive readline', m.hexdigest()))

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: .\sqlmap\thirdparty\keepalive\keepalive.py:576:13
575	        if delay and i > 0: time.sleep(delay)
576	        fo = _urllib.request.urlopen(url)
577	        foo = fo.read()

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: .\sqlmap\thirdparty\keepalive\keepalive.py:598:9
597	    print("  fetching the file to establish a connection")
598	    fo = _urllib.request.urlopen(url)
599	    data1 = fo.read()

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: .\sqlmap\thirdparty\keepalive\keepalive.py:612:9
611	    print("  fetching the file a second time")
612	    fo = _urllib.request.urlopen(url)
613	    data2 = fo.read()

--------------------------------------------------
>> Issue: [B408:blacklist] Using minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: .\sqlmap\thirdparty\prettyprint\prettyprint.py:26:0
25	
26	from xml.dom import minidom
27	from xml.dom import Node

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: .\sqlmap\thirdparty\prettyprint\prettyprint.py:30:14
29	def format(text):
30	        doc = minidom.parseString(text)
31	        root = doc.childNodes[0]

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b102_exec_used.html
   Location: .\sqlmap\thirdparty\six\__init__.py:740:8
739	            _locs_ = _globs_
740	        exec("""exec _code_ in _globs_, _locs_""")
741	

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: .\sqlmap\thirdparty\socks\socks.py:358:32
357	            raise HTTPError((statuscode, statusline[2]))
358	        self.__proxysockname = ("0.0.0.0", 0)
359	        self.__proxypeername = (addr, destport)

--------------------------------------------------

Code scanned:
	Total lines of code: 59723
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 164
		Medium: 81
		High: 43
	Total issues (by confidence):
		Undefined: 0
		Low: 54
		Medium: 13
		High: 221
Files skipped (0):
